<?xml version='1.0' encoding='UTF-8'?>
<xs:schema targetNamespace="http://www.example.com/general"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:gen="http://www.example.com/general"
    xmlns:xmime="http://www.w3.org/2005/05/xmlmime"
    elementFormDefault="qualified">
  <xs:import namespace="http://www.w3.org/2005/05/xmlmime"
        schemaLocation="http://www.w3.org/2005/05/xmlmime"/>

  <xs:complexType name="SingularBuiltInTypeTest">
    <xs:sequence>
      <xs:element name="string" type="xs:string"/>
      <xs:element name="boolean" type="xs:boolean"/>
      <xs:element name="decimal" type="xs:decimal"/>
      <xs:element name="float" type="xs:float"/>
      <xs:element name="double" type="xs:double"/>
      <xs:element name="duration" type="xs:duration"/>
      <xs:element name="dateTime" type="xs:dateTime"/>
      <xs:element name="time" type="xs:time"/>
      <xs:element name="date" type="xs:date"/>
      <xs:element name="gYearMonth" type="xs:gYearMonth"/>

      <xs:element name="gYear" type="xs:gYear"/>
      <xs:element name="gMonthDay" type="xs:gMonthDay"/>
      <xs:element name="gDay" type="xs:gDay"/>
      <xs:element name="gMonth" type="xs:gMonth"/>
      <xs:element name="hexBinary" type="xs:hexBinary"/>
      <xs:element name="base64Binary" type="xs:base64Binary"/>
      <xs:element name="anyURI" type="xs:anyURI"/>
      <xs:element name="QName" type="xs:QName"/>
      <xs:element name="NOTATION" type="xs:NOTATION"/>
      <xs:element name="normalizedString" type="xs:normalizedString"/>

      <xs:element name="token" type="xs:token"/>
      <xs:element name="language" type="xs:language"/>
      <xs:element name="NMTOKEN" type="xs:NMTOKEN"/>
      <xs:element name="NMTOKENS" type="xs:NMTOKENS"/>
      <xs:element name="Name" type="xs:Name"/>
      <xs:element name="NCName" type="xs:NCName"/>
      <xs:element name="ID" type="xs:ID"/>
      <xs:element name="IDREF" type="xs:IDREF"/>
      <xs:element name="IDREFS" type="xs:IDREFS"/>
      <xs:element name="ENTITY" type="xs:ENTITY"/>

      <xs:element name="ENTITIES" type="xs:ENTITIES"/>
      <xs:element name="integer" type="xs:integer"/>
      <xs:element name="nonPositiveInteger" type="xs:nonPositiveInteger"/>
      <xs:element name="negativeInteger" type="xs:negativeInteger"/>
      <xs:element name="long" type="xs:long"/>
      <xs:element name="int" type="xs:int"/>
      <xs:element name="short" type="xs:short"/>
      <xs:element name="byte" type="xs:byte"/>
      <xs:element name="nonNegativeInteger" type="xs:nonNegativeInteger"/>
      <xs:element name="unsignedLong" type="xs:unsignedLong"/>

      <xs:element name="unsignedInt" type="xs:unsignedInt"/>
      <xs:element name="unsignedShort" type="xs:unsignedShort"/>
      <xs:element name="unsignedByte" type="xs:unsignedByte"/>
      <xs:element name="positiveInteger" type="xs:positiveInteger"/>
      <xs:element name="anyType" type="xs:anyType"/>
      <xs:element name="anySimpleType" type="xs:anySimpleType" />
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="SingularComplexTypeTest">
    <xs:sequence>
      <xs:element name="person1" type="gen:Person"/>
      <xs:element name="person2" nillable="true" type="gen:Person"/>
      <xs:element name="person3" minOccurs="0" type="gen:Person"/>
      <xs:element name="person4" minOccurs="0" nillable="true" type="gen:Person"/>
      <xs:element name="person5" maxOccurs="unbounded" type="gen:Person"/>
      <xs:element name="person6" maxOccurs="unbounded" nillable="true" type="gen:Person"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="NillablePersonStarTest">
    <xs:sequence>
      <xs:element name="person" maxOccurs="unbounded" nillable="true" type="gen:Person"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="ChoiceComplexTypeTest">
    <xs:sequence>
      <xs:choice>
        <xs:element name="person1" type="gen:Person"/>
        <xs:element name="address1" type="gen:Address"/>
      </xs:choice>
      <xs:choice>
        <xs:element name="person2" nillable="true" type="gen:Person"/>
        <xs:element name="address2" nillable="true" type="gen:Address"/>
      </xs:choice>
      <xs:choice minOccurs="0">
        <xs:element name="person3" type="gen:Person"/>
        <xs:element name="address3" type="gen:Address"/>
      </xs:choice>
      <xs:choice minOccurs="0">
        <xs:element name="person4" nillable="true" type="gen:Person"/>
        <xs:element name="address4" nillable="true" type="gen:Address"/>
      </xs:choice>
      <xs:choice maxOccurs="unbounded">
        <xs:element name="person5" type="gen:Person"/>
        <xs:element name="address5" type="gen:Address"/>
      </xs:choice>
      <xs:choice maxOccurs="unbounded">
        <xs:element name="person6" nillable="true" type="gen:Person"/>
        <xs:element name="address6" nillable="true" type="gen:Address"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="SingularSimpleTypeTest">
    <xs:sequence>      
      <xs:element name="number1" type="xs:unsignedInt"/>
      <xs:element name="number2" nillable="true" type="xs:unsignedInt"/>
      <xs:element name="number3" minOccurs="0" type="xs:unsignedInt"/>
      <xs:element name="number4" minOccurs="0" nillable="true" type="xs:unsignedInt"/>
      <xs:element name="number5" maxOccurs="unbounded" type="xs:unsignedInt"/>
      <xs:element name="number6" maxOccurs="unbounded" nillable="true" type="xs:unsignedInt"/>
      
      <xs:element name="milk1" type="gen:MilkType"/>
      <xs:element name="milk2" nillable="true" type="gen:MilkType"/>
      <xs:element name="milk3" minOccurs="0" type="gen:MilkType"/>
      <xs:element name="milk4" minOccurs="0" nillable="true" type="gen:MilkType"/>
      <xs:element name="milk5" maxOccurs="unbounded" type="gen:MilkType"/>
      <xs:element name="milk6" maxOccurs="unbounded" nillable="true" type="gen:MilkType"/>
    </xs:sequence>
    
    <xs:attribute name="attr1" type="xs:unsignedInt"/>
    <xs:attribute name="attr2" type="gen:MilkType"/>   
  </xs:complexType>
  
  <xs:complexType name="ListTest">
    <xs:sequence>
      <xs:element name="numbers1" type="gen:ListOfBuiltInType"/>
      <xs:element name="numbers2" nillable="true" type="gen:ListOfBuiltInType"/>
      <xs:element name="numbers3" minOccurs="0" type="gen:ListOfBuiltInType"/>
      <xs:element name="numbers4" minOccurs="0" nillable="true" type="gen:ListOfBuiltInType"/>
      <xs:element name="numbers5" maxOccurs="unbounded" type="gen:ListOfBuiltInType"/>
      <xs:element name="numbers6" maxOccurs="unbounded" nillable="true" type="gen:ListOfBuiltInType"/>
      <xs:element name="numbers7" type="gen:ListOfBuildIntTypeDerived"/>

      <xs:element name="milk1" type="gen:ListOfMilk"/>
      <xs:element name="milk2" nillable="true" type="gen:ListOfMilk"/>
      <xs:element name="milk3" minOccurs="0" type="gen:ListOfMilk"/>
      <xs:element name="milk4" minOccurs="0" nillable="true" type="gen:ListOfMilk"/>
      <xs:element name="milk5" maxOccurs="unbounded" type="gen:ListOfMilk"/>
      <xs:element name="milk6" maxOccurs="unbounded" nillable="true" type="gen:ListOfMilk"/>
      <xs:element name="milk7" type="gen:ListOfMilkDerived"/>
    </xs:sequence>
    
    <xs:attribute name="attr1" type="gen:ListOfBuiltInType"/>
    <xs:attribute name="attr2" type="gen:ListOfMilk"/>
  </xs:complexType>
  
  <xs:complexType name="AnyTest">
    <xs:sequence>
      <xs:element name="person1" type="gen:Person"/>
      <xs:any namespace="##other" processContents="lax"/>
      <xs:any namespace="##local" processContents="lax"/>
      <xs:choice>
        <xs:element name="person2" nillable="true" type="gen:Person"/>
        <xs:any namespace="##other" processContents="lax"/>
      </xs:choice>
      <xs:element name="person3" minOccurs="0" type="gen:Person"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0"/>
      <xs:choice>
        <xs:element name="person4" minOccurs="0" nillable="true" type="gen:Person"/>
        <xs:any namespace="##other" processContents="lax" minOccurs="0"/>
      </xs:choice>
      <xs:any namespace="##other" processContents="lax" maxOccurs="unbounded"/>
      <xs:element name="person5" maxOccurs="unbounded" type="gen:Person"/>
      <xs:any />
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="AnyTypeTest">
    <xs:sequence>
      <xs:element name="any1" type="xs:anyType"/>
      <xs:element name="any2" nillable="true" type="xs:anyType"/>
      <xs:element name="any3" minOccurs="0" type="xs:anyType"/>
      <xs:element name="any4" minOccurs="0" nillable="true" type="xs:anyType"/>
      <xs:element name="any5" maxOccurs="unbounded" type="xs:anyType"/>
      <xs:element name="any6" maxOccurs="unbounded" nillable="true" type="xs:anyType"/>      
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="LongAllTest">
    <xs:all>
      <xs:element name="address1" type="gen:Address"/>
      <xs:element name="address2" minOccurs="0" type="gen:Address"/>
      <xs:element name="string3" type="xs:string"/>
      <xs:element name="string4" type="xs:string"/>
      <xs:element name="string5" type="xs:string"/>
      <xs:element name="string6" type="xs:string"/>
      <xs:element name="string7" type="xs:string"/>
      <xs:element name="string8" type="xs:string"/>
      <xs:element name="string9" type="xs:string"/>
      <xs:element name="string10" type="xs:string"/>
      <xs:element name="string11" type="xs:string"/>
      <xs:element name="string12" type="xs:string"/>
      <xs:element name="string13" type="xs:string"/>
      <xs:element name="string14" type="xs:string"/>
      <xs:element name="string15" type="xs:string"/>
      <xs:element name="string16" type="xs:string"/>
      <xs:element name="string17" type="xs:string"/>
      <xs:element name="string18" type="xs:string"/>
      <xs:element name="string19" type="xs:string"/>
      <xs:element name="string20" type="xs:string"/>
      <xs:element name="string21" type="xs:string"/>
      <xs:element name="string22" type="xs:string"/>
      <xs:element name="string23" type="xs:string"/>
      <xs:element name="string24" type="xs:string"/>
      <xs:element name="string25" type="xs:string"/>
      <xs:element name="string26" type="xs:string"/>
      <xs:element name="string27" type="xs:string"/>
      <xs:element name="string28" type="xs:string"/>
      <xs:element name="string29" type="xs:string"/>
      <xs:element name="string30" type="xs:string"/>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="EmptyComplexTypeTest">
  </xs:complexType>

  <xs:complexType name="EmptySequenceTest">
  </xs:complexType>

  <xs:complexType name="EmptySequenceGroupTest">
    <xs:sequence>
      <xs:group ref="gen:emptySeqGroup"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="EmptyChoiceGroupTest">
    <xs:choice>
      <xs:group ref="gen:emptySeqGroup"/>
      <xs:element name="string1" type="xs:string"/>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="TopLevelMultipleSeqTest">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="firstName" type="xs:string"/>
      <xs:element name="lastName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>  
  
  <xs:complexType name="TopLevelOptionalSeqTest">
    <xs:sequence minOccurs="0">
      <xs:element name="firstName" type="xs:string"/>
      <xs:element name="lastName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="TopLevelMultipleSeqAnyTest" mixed="true">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:any namespace="##other" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ProtocolType">
    <xs:choice minOccurs="1" maxOccurs="1">
      <xs:element name="HTTP"/>
      <xs:element name="TCP"/>
      <xs:element name="UDP"/>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="Person">
    <xs:sequence>
      <xs:element name="firstName" type="xs:string"/>
      <xs:element name="lastName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="Address">
    <xs:sequence>
      <xs:element name="street" type="xs:string"/>
      <xs:element name="city" type="xs:string"/>
      <xs:element name="state" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="USAddress">
    <xs:complexContent>
      <xs:extension base="gen:Address">
        <xs:sequence>
          <xs:element name="zip"   type="xs:positiveInteger"/>
        </xs:sequence>
        <xs:attribute name="href" type="xs:anyURI"/>
        <xs:anyAttribute/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="MilkType">
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="WHOLE"/>
      <xs:enumeration value="SKIM"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ListOfMilk">
    <xs:list itemType="gen:MilkType"/>
  </xs:simpleType>

  <xs:simpleType name="ListOfMilkDerived">
    <xs:restriction base="gen:ListOfMilk">
      <xs:minLength value="0"/>
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="ComplexListOfMilk">
    <xs:simpleContent>
      <xs:extension base="gen:ListOfMilkDerived">
        <xs:attributeGroup ref="gen:coreattrs"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="ListOfBuiltInType">
    <xs:list itemType="xs:unsignedInt"/>
  </xs:simpleType>

  <xs:simpleType name="ListOfBuildIntTypeDerived">
    <xs:restriction base="gen:ListOfBuiltInType">
      <xs:minLength value="0"/>
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="ComplexListOfBuiltInType">
    <xs:simpleContent>
      <xs:extension base="gen:ListOfBuildIntTypeDerived">
        <xs:attributeGroup ref="gen:coreattrs"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="DupeSequenceTest">
    <xs:sequence>
      <xs:element name="street" type="xs:string"/>
			<xs:element name="other" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:any namespace="##any" processContents="lax" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="DupeSequenceTest2">
    <xs:sequence>
      <xs:element name="street" type="xs:string"/>
			<xs:element name="other" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:any namespace="##any" processContents="lax" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="subgroupHead" type="xs:string"/>
  <xs:element name="SubGroupMember" type="gen:MilkType" substitutionGroup="gen:subgroupHead"/>
  <xs:element name="SubGroupMember2" type="gen:Person" substitutionGroup="gen:subgroupHead"/>
  <xs:element name="subgroupTop" type="gen:SubstitutionGroupTest"/>
  <xs:complexType name="SubstitutionGroupTest">
    <xs:sequence>
      <xs:element ref="gen:subgroupHead"/>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="longAttributeTest">
    <xs:complexType>
      <xs:attribute name="milk1" type="gen:MilkType"/>
      <xs:attribute name="string2" type="xs:string"/>
      <xs:attribute name="string3" type="xs:string"/>
      <xs:attribute name="string4" type="xs:string"/>
      <xs:attribute name="string5" type="xs:string"/>
      <xs:attribute name="string6" type="xs:string"/>
      <xs:attribute name="string7" type="xs:string"/>
      <xs:attribute name="string8" type="xs:string"/>
      <xs:attribute name="string9" type="xs:string"/>
      <xs:attribute name="string10" type="xs:string"/>
      <xs:attribute name="string11" type="xs:string"/>
      <xs:attribute name="string12" type="xs:string"/>
      <xs:attribute name="string13" type="xs:string"/>
      <xs:attribute name="string14" type="xs:string"/>
      <xs:attribute name="string15" type="xs:string"/>
      <xs:attribute name="string16" type="xs:string"/>
      <xs:attribute name="string17" type="xs:string"/>
      <xs:attribute name="string18" type="xs:string"/>
      <xs:attribute name="string19" type="xs:string"/>
      <xs:attribute name="string20" type="xs:string"/>
      <xs:attribute name="string21" type="xs:string"/>
      <xs:attribute name="string22" type="xs:string"/>
      <xs:attribute name="string23" type="xs:string"/>
      <xs:attribute name="string24" type="xs:string"/>
      <xs:attribute name="string25" type="xs:string"/>
      <xs:attribute name="string26" type="xs:string"/>
      <xs:attribute name="string27" type="xs:string"/>
      <xs:attribute name="string28" type="xs:string"/>
      <xs:attribute name="string29" type="xs:string"/>
      <xs:attribute name="string30" type="xs:string"/>
      <xs:attributeGroup ref="gen:coreattrs"/>
      <xs:anyAttribute namespace="##any"/>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="anySimpleTypeExtension">
    <xs:simpleContent>
      <xs:extension base="xs:anySimpleType">
         <xs:anyAttribute namespace="##any" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="NillableChoiceGroupTest">
    <xs:sequence>
      <xs:group ref="gen:NillableChoiceGroup" minOccurs="1" maxOccurs="1" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="BaseEvent" abstract="true">
  </xs:complexType>
  <xs:complexType name="EventOne">
    <xs:complexContent>
      <xs:extension base="gen:BaseEvent">
        <xs:sequence>
          <xs:element name="queueEntry" type="xs:string" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="EventTwo">
    <xs:complexContent>
      <xs:extension base="gen:EventOne">
        <xs:sequence>
          <xs:element name="callId" type="xs:string" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:attributeGroup name="coreattrs">
    <xs:annotation>
      <xs:documentation>
      core attributes common to most elements
      id       document-wide unique id
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="xs:ID"/>
    <xs:attribute name="class" type="xs:NMTOKENS"/>
  </xs:attributeGroup>

  <xs:group name="emptySeqGroup">
    <xs:sequence/>
  </xs:group>

  <xs:group name="dupeElemGroup1">
    <xs:choice>
      <xs:element name="dupeElem">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="dupeElem">
              <xs:complexType/>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:group>

  <xs:group name="dupeElemGroup2">
    <xs:choice>
      <xs:element name="dupeElem">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="dupeElem">
              <xs:complexType/>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:group>

  <xs:group name="NillableChoiceGroup">
    <xs:choice>
      <xs:element name="Elem1" nillable="true">
        <xs:complexType>
          <xs:sequence>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Elem2">
        <xs:complexType>
          <xs:sequence>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:group>

  <xs:complexType name="JpegPictureType" xmime:expectedContentTypes="image/jpeg;q=1.0, image/tiff;q=0.8">
    <xs:simpleContent>
      <xs:restriction base="xmime:base64Binary" >
        <xs:attribute ref="xmime:contentType" use="required" />
      </xs:restriction>
    </xs:simpleContent>
  </xs:complexType>

  <xs:element name="MimeTest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="JpegPicture" type="gen:JpegPictureType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="InnerSimpleTypeTest">
    <xs:sequence>
      <xs:element name="billingAccountType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="MOBILE" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="Array" >
    <xs:annotation>
    <xs:documentation>
     'Array' is a complex type for accessors identified by position 
    </xs:documentation>
  </xs:annotation>
    <xs:group ref="gen:Array" minOccurs="0" />
  </xs:complexType>

  <xs:group name="Array" >
    <xs:sequence>
      <xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax" />
    </xs:sequence>
  </xs:group>

  <xs:complexType name="LiteralBoolean">
    <xs:attribute name="avail" type="xs:boolean"  use="required" />
    <xs:attribute name="reason" type="xs:string"/>
  </xs:complexType>

</xs:schema>
